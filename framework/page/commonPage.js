module.exports = {
  fields: {
    searchMenuInputField: locate('input').withAttr({ type: 'text' }).inside('#searchMenuHolder'),
  },
  buttons: {
    saveAndNewButton: '#AddBtn',
    saveAndRefreshButton: '#RefreshBtn',
    saveAndCloseButton: '#SaveBtn',
    insertButton: '#InsertBtn',
    goBackButton: '#backBtn',
    deleteButton: '#DeleteBtn',
    firstButton: '#ebsContainerContent_sys_entity_sys_entityview_toolbar_item_1',
    forthButton: '#ebsContainerContent_defaultEntityStatusId_popupLkp_lookupgrid_toolbar_item_4',
    menuOk: '#ebsContainerContent_lookupToEntityName_popupLkp_lookupgrid_toolbar_item_4',
    menuOkSpecial: '#ebsContainerContent_attachToEntity_popupLkp_lookupgrid_toolbar_item_3',
    viewButton: '//a[contains(text(),\'View\')]',
    loaderButton: locate('div').withAttr({ id: 'osLoader' }).withAttr({ class: 'ftos-loader first-time is-loading' }),
    tabStepTwo: '.stepNumber-2',
    insertOptionSetButton: '#ebsContainerContent_optionSet_toolbar_item_1',
    buttonsTable: '#ebsToolbar',
    historyButton: '#HistoryBtn',
    checkboxCheckedOrNot: '.dx-checkbox.dx-widget.dx-checkbox-checked',
    yesAnswerButton: '.dx-button-default.dx-button-mode-contained.dx-widget.dx-button-has-text',
    noAnswerButton: locate('span').withText('No').inside(locate('div').withAttr({ 'aria-label': 'No'})),
    messagePopuppppp: 'dx-overlay-content.dx-popup-normal.dx-popup-draggable.dx-resizable',
    cancelAnswerButton: locate('div').withAttr({ 'aria-label': 'Cancel' }).inside(locate('div').withAttr({ class: 'dx-popup-content' })),
    secondButton: '#ebsContainerContent_sys_entity_sys_entityview_toolbar_item_2',
    forthRelationshipButton: '#ebsContainerContent_referencingEntityId_popupLkp_lookupgrid_toolbar_item_4',
    selectformStatusInsert: '//td[contains(text(), \'Insert\')]',
    insertButtonRelationshipReferenced: '#ebsContainerContent_sys_relationship_entityreferenced_withReferencingEntity_toolbar_item_1',
    insertExistingButton: '#ebsContainerContent_AT_InsertEx1_AT_InsertEx2_toolbar_item_1',
    insertExistingButton_AT_InsIns1_AT_InsIns2_Relationship: '#ebsContainerContent_AT_InsIns1_AT_InsIns2_toolbar_item_1',
    languageDropdownButton: '#ui-config-trigger',
    nextButton: '.btn-next',
    myProfileButton: locate('span').withText('My profile').inside(locate('ul').withAttr({ class: 'account-dropdown-holder' })),
    skipInteractiveTutorialButton: locate('a').withText('Skip'),
    contextMenuButton: '#ebs-context-menu',
  },
  popup: {
    popupContent: '.dx-popup-content',
    loadIndicator: 'dx-loadindicator',
  },
  messagePopup: {
    toast: '.jq-toast-wrap',
    successMessage: '.jq-icon-success',
    errorMessage: '.jq-icon-error',
    infoMessage: '.jq-icon-info',
    closeErrorMessage: '.close-jq-toast-single',
  },
  properties: {
    readonlyProperties: '.ebs-readonly',
    mandatoryProperties: '.ebs-required',
    checkedProperties: '.dx-checkbox-checked',
    isNotEditable: '.dx-cell-focus-disabled',
  },
  checkbox: {
    selectSingleResultCheckbox: '.dx-command-select',
    selectTheCheckbox: '.dx-select-checkbox.dx-datagrid-checkbox-size.dx-checkbox',
    selectSingleResultCheckedCheckbox: 'dx-checkbox-icon marked-element',
  },
  container: {
    containerContent: '#ebsContainerContent',
    interactiveTutorialContainer: '#appBoundaryInteractiveTutorial',
    homePageContainer: '#studioDeveloperContainer',
  },
};
